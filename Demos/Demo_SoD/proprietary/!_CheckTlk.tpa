// Never Forget: Comments can "lie", but code not so much ;P
// CHECKS EXISTING ENTRIES IN DIALOG.TLK
// -------------------------------------

// RECEIVES CURRENT MAX STREF
// --------------------------
OUTER_SET highestStrref = NEXT_STRREF - 1
// MONITORING
PRINT ~tlkCheck.tpa -> highestStrref: %highestStrref%~


// FINDS TLK START VALUE
// ---------------------
// Checks games to select the appropriate starting value for strref (the order of if statements is important)
ACTION_IF (GAME_INCLUDES ~sod~) THEN
BEGIN
	OUTER_SET startStrref = 71400 // Siege of Dragonspear
END ELSE ACTION_IF (GAME_IS ~bgee~) THEN 
BEGIN
	OUTER_SET startStrref = 33990 // Baldur's Gate Enhanced Edition
END ELSE ACTION_IF (GAME_IS ~bg2ee~) THEN 
BEGIN
	OUTER_SET startStrref = 103580 // Baldur's Gate 2 Enhanced Edition
END ELSE ACTION_IF (GAME_IS ~iwdee~) THEN 
BEGIN
	OUTER_SET startStrref = 41280 // Icewind Dale 2 Enhanced Edition
END ELSE
BEGIN
	OUTER_SET startStrref = 0
END
// MONITORING
PRINT ~tlkCheck.tpa -> startStrref: %startStrref%~


// CHECKS FOR PRESENT STRREF-VALUES
// ---------------------------------
// tlk loop variables
OUTER_SET strref 			= startStrref
OUTER_SET specialCondition 	= 0
OUTER_SET conditionalIndex 	= 0
ALTER_TLK_RANGE startStrref highestStrref BEGIN

	// Gets sound and text from the string reference
	GET_STRREF 		strref 	refText
	GET_STRREF_S 	strref	refSound
	
	// Loops through arrays and checks if current string reference values ​​already exist in dialog.tlk
	FOR(index=0; index < slotNumbers; ++index)
	BEGIN
		SPRINT arrText 		$~%refTextArray%~(~%index%~)
		SPRINT arrSound 	$~%refSoundArray%~(~%index%~)
		
		// Text and sound references already present
		PATCH_IF(~%refSound%~ STRING_EQUAL ~%arrSound%~) AND 
				(~%refText%~ STRING_EQUAL ~%arrText%~) THEN
		BEGIN	
			// Sets all dyn array values to !_NULL	
			SET 		~!_position~ 		= index
			SET 		~!_maxSlots~ 		= slotNumbers
			SET			~!_collected~		= 0
			SPRINT 		~!_useArrayName~ 	~%refTextArray%~
			SPRINT 		~!_arrayValue~		~!_NULL~
			LPM DYN_ARRAY_SET_VALUES

			// Sets the current string reference value
			SET 		~!_position~ 		= index
			SET 		~!_maxSlots~ 		= slotNumbers
			SET			~!_collected~		= 0
			SPRINT 		~!_useArrayName~ 	~%TLKindexArray%~
			SET 		~!_arrayValue~ 		= strref
			LPM DYN_ARRAY_SET_VALUES

			// Sets special condition to true(1). 
			// When the collection of array values ​​is completed, the correct index of the last iteration is saved
			SET specialCondition = 1
			SET conditionalIndex = index
			// MONITORING				
			PATCH_PRINT ~tlkCheck.tpa -> Reference for "%arrText%[%arrSound%]" in dialog.tlk is already exsiting on position %strref%~			
		END 
		// If sound reference already exists but the text doesn't fit
		ELSE PATCH_IF 	(~%refSound%~ STRING_EQUAL ~%arrSound%~) AND 
						NOT (~%refText%~ STRING_EQUAL ~%arrText%~) AND 
						NOT (~%arrText%~ STRING_EQUAL ~!_NULL~) THEN
		BEGIN
			// Replaces referenced text in dialog.tlk with the array text
			REPLACE_TEXTUALLY CASE_SENSITIVE EXACT_MATCH ~%refText%~ ~%arrText%~
			//STRING_SET ~%index%~ ~%arrText%~
			PATCH_PRINT ~strref:%strref% index:%index% refText:%refText%  arrText:%arrText% arrSound:%arrSound%~

			// Sets all dyn array values to !_NULL
			SET 		~!_position~ 		= index
			SET 		~!_maxSlots~ 		= slotNumbers
			SET			~!_collected~		= 0
			SPRINT 		~!_useArrayName~ 	~%refTextArray%~
			SPRINT 		~!_arrayValue~		~!_NULL~
			LPM DYN_ARRAY_SET_VALUES

			// Sets current string reference value
			SET 		~!_position~ 		= index
			SET 		~!_maxSlots~ 		= slotNumbers
			SET			~!_collected~ 		= 0
			SPRINT 		~!_useArrayName~ 	~%TLKindexArray%~
			SET 		~!_arrayValue~ 		= strref
			LPM DYN_ARRAY_SET_VALUES

			// Sets special condition to true(1)
			// When the collection of array values ​​is completed, the correct index of the last iteration is saved
			SET specialCondition = 1
			SET conditionalIndex = index
			// MONITORING			
			PATCH_PRINT ~tlkCheck.tpa -> Correcting "%refText%" to "%arrText%" in dialog.tlk on position %strref%~			
		END	
		
	END // End of "FOR"

	// Inserting all array items into the array(All array values are collected)
	PATCH_IF(specialCondition = 1) THEN
	BEGIN
		// Resets flag/condition
		SET specialCondition = 0

		// Sets all dyn array values to !_NULL (Last !_NULL value)
		SET 		~!_position~ 		= conditionalIndex
		SET 		~!_maxSlots~ 		= slotNumbers
		SET			~!_collected~		= 1
		SPRINT 		~!_useArrayName~ 	~%refTextArray%~
		SPRINT 		~!_arrayValue~		~!_NULL~
		LPM DYN_ARRAY_SET_VALUES

		// Sets current string reference value (Last strref value)
		SET 		~!_position~ 		= conditionalIndex
		SET 		~!_maxSlots~ 		= slotNumbers
		SET			~!_collected~ 		= 1
		SPRINT 		~!_useArrayName~ 	~%TLKindexArray%~
		SET 		~!_arrayValue~ 		= strref
		LPM DYN_ARRAY_SET_VALUES
	END
	
	// Next strref in dialog.tlk
	SET strref = strref+1
	
END // End of "ALTER_TLK_RANGE"